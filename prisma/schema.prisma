// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model StoreConnection {
  id              String    @id @default(cuid())
  shop            String    // The shop that owns this connection
  name            String    // Friendly name for the connection
  storeDomain     String    // Production store domain
  encryptedToken  String    // Encrypted access token
  environment     String    @default("production") // production, staging, etc.
  isActive        Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  syncLogs        SyncLog[]

  @@unique([shop, storeDomain])
  @@index([shop])
}

model SyncLog {
  id              String    @id @default(cuid())
  shop            String
  connectionId    String
  syncType        String    // metafield_definitions, products, etc.
  status          String    // success, partial, failed
  summary         String?   // JSON summary of results
  logs            String?   // JSON array of log entries
  startedAt       DateTime  @default(now())
  completedAt     DateTime?

  // Relations
  connection      StoreConnection @relation(fields: [connectionId], references: [id], onDelete: Cascade)

  @@index([shop, syncType])
  @@index([connectionId])
}
